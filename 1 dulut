#include <iostream>
using  namespace std;
int main()
{
    setlocale(LC_ALL, "RU");
    int mass[100][100],N = 0, mass1[100][100], mass2[100][100], mass3[100][100], mass4[100][100];
    cout << "Введите количество строк и столбцов(N) матрицы: ";
    cin >> N;

    // ввод и вывод матрицы
    for (int i = 0;i < N;i++) {
        for (int j = 0;j < N;j++) {
            cout << "Введите " << i + 1 << "-ый и " << j + 1 << "-ый элемент матрицы: ";
            cin >> mass[i][j];
        }
    }
    cout <<  "Матрица:" << endl;
    for (int i = 0;i < N;i++) {
        cout << "\n";
        for (int j = 0;j < N;j++) {
            cout << mass[i][j] << " ";
        }
    }
    cout << "\n -------------------------------------" << endl ;

    // отражение отностительно главной диагонали и вывод новый матрицы
    for (int i = 0;i < N;i++) {
        for (int j = 0;j < N;j++) {
            mass1[i][j] = mass[j][i];   
        }
    }
    cout << "Новая отсортированная матрица: (главная диагональ)" << endl;
    for (int i = 0;i < N;i++) {
        cout << "\n";
        for (int j = 0;j < N;j++) {
            cout << mass1[i][j] << " ";
        }
    }

    cout << "\n -------------------------------------" << endl;
    // отражение относительно побочной диагонали
    for (int i = 0;i < N;i++) {
        for (int j = 0;j < N;j++) {
            mass2[i][j] = mass[N - j - 1][N - i - 1];
        }
    }
    cout << "Новая отсортированная матрица:(Побочная диагональ)" << endl;
    for (int i = 0;i < N;i++) {
        cout << "\n";
        for (int j = 0;j < N;j++) {
            cout << mass2[i][j] << " ";
        }
    }

    cout << "\n -------------------------------------" << endl;

    // отражение относительно вертикальной оси
    for (int i = 0;i < N;i++) {
        for (int j = 0;j < N;j++) {
            mass3[i][j] = mass[i][N - j - 1];
        }
        
    }
    cout << "Новая отсортированная матрица: (Вертикальная ось)" << endl;
    for (int i = 0;i < N;i++) {
        cout << "\n";
        for (int j = 0;j < N;j++) {
            cout << mass3[i][j] << " ";
        }
    }

    cout << "\n -------------------------------------" << endl;

    // отражение относительно горизонтальной оси

    for (int i = 0;i < N;i++) {
        for (int j = 0;j < N;j++) {
            mass4[i][j] =  mass[N - i - 1][j];
        }
    }
    cout << "Новая отсортированная матрица: (Горизонтальная ось)" << endl;
    for (int i = 0;i < N;i++) {
        cout << "\n";
        for (int j = 0;j < N;j++) {
            cout << mass4[i][j] << " ";
        }
    }


    // сравнение 4 матриц  и вывод совпадающих элементов
    cout << "\n -------------------------------------" << endl << "Вывод совпадающих элементов: " << endl;

    for (int i = 0;i < N;i++) {
        for (int j = 0;j < N;j++) {
            if (mass1[i][j] == mass2[i][j] && mass3[i][j] == mass4[i][j] && mass1[i][j] == mass3[i][j]) {
                cout << "Совпадающие элементы под  индексом:" << "[" << i << "," << j << "]" << endl;
            }
            else {
                cout << "Совпадений нет под этими индексами нет" << "[" << i << "," << j << "]" << endl;
            }
        }
    }



    return 0;
}

